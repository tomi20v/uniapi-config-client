{"version":3,"sources":["/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity-routing.module.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.html","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.module.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.css","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.html","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.css","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.html","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.ts"],"names":[],"mappings":"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","file":"entity.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {EntityComponent} from './entity.component';\n\nconst routes: Routes = [\n  { path: '', component: EntityComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EntityRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity-routing.module.ts","module.exports = \"<div class=\\\"orders view\\\">\\n  <div class=\\\"container\\\">\\n    <header>\\n      <h3><span class=\\\"glyphicon glyphicon-info-sign\\\"></span>&nbsp;&nbsp;Entity Information</h3>\\n    </header>\\n    <div *ngIf=\\\"entity\\\" class=\\\"app-content-left\\\">\\n      <form [formGroup]=\\\"entityForm\\\" class=\\\"app-column\\\">\\n        <div class=\\\"app-input-row-huge\\\">\\n          <label>Name:</label>\\n          <input formControlName=\\\"name\\\">\\n        </div>\\n        <div class=\\\"app-input-row\\\">\\n          <label>ID:</label>\\n          <input formControlName=\\\"_id\\\">\\n        </div>\\n        <div class=\\\"app-input-row-half\\\">\\n          <label>created:</label>\\n          <span class=\\\"app-input-info disabled\\\">{{entityForm.value.crstamp*1000 | date : 'yyyy-MM-dd HH:mm:ss'}}</span>\\n        </div>\\n        <div class=\\\"app-input-row-half\\\">\\n          <label>last updated:</label>\\n          <span class=\\\"app-input-info disabled\\\">{{entityForm.value.tstamp*1000 | date : 'yyyy-MM-dd HH:mm:ss'}}</span>\\n        </div>\\n        <div class=\\\"app-input-row\\\">\\n          <span (click)=\\\"addPlugin()\\\"\\n                class=\\\"app-input-action\\\">\\n            new plugin\\n            <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n          </span>\\n          <label>plugins:</label>\\n          <ul *ngIf=\\\"entityForm.value.plugins.length\\\" class=\\\"app-input-info\\\">\\n              <li *ngFor=\\\"let plugin of entityForm.value.plugins; let index = index\\\">\\n                  <span *ngIf=\\\"index !== pluginEditing.index\\\"\\n                        (click)=\\\"editPlugin(index, plugin)\\\"\\n                        class=\\\"app-input-action\\\">\\n                    edit\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n                  </span>\\n                  <span *ngIf=\\\"index === pluginEditing.index\\\" class=\\\"app-input-action\\\">\\n                    <span>currently editing</span>\\n                    <span class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                  </span>\\n                  <b>{{plugin.pluginId}}</b>\\n                  {{plugin.description}}\\n              </li>\\n          </ul>\\n          <span *ngIf=\\\"!entityForm.value.plugins.length\\\"\\n                class=\\\"app-input-info disabled\\\">no plugins</span>\\n        </div>\\n        <div class=\\\"app-input-row\\\">\\n          <label>schema:</label>\\n          <select formControlName=\\\"schema\\\">\\n              <option *ngFor=\\\"let schema of schemas\\\" value=\\\"{{schema.$id}}\\\">{{schema.$id}}</option>\\n          </select>\\n        </div>\\n      </form>\\n      <div class=\\\"app-column\\\">\\n        <plugin-chooser *ngIf=\\\"!pluginEditing.pluginId\\\"\\n          (onAdd)=\\\"pluginSelected($event)\\\"></plugin-chooser>\\n        <plugin-editor [pluginId]=\\\"pluginEditing.pluginId\\\"\\n          [pluginConfig]=\\\"pluginEditing.pluginConfig\\\"\\n          [pluginIndex]=\\\"pluginEditing.index\\\"></plugin-editor>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!entity\\\" class=\\\"app-content-left\\\">\\n      No entity found\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.html\n// module id = ../../../../../src/app/entity/entity.component.html\n// module chunks = entity.module","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../core/services/data.service';\nimport {IEntity, ISchema} from '../shared/interfaces';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'cm-entity',\n  templateUrl: './entity.component.html'\n})\nexport class EntityComponent implements OnInit {\n\n  entity: IEntity;\n  entityForm = new FormGroup({\n    _id: new FormControl(),\n    name: new FormControl(),\n    crstamp: new FormControl(),\n    tstamp: new FormControl(),\n    plugins: new FormControl(),\n    schema: new FormControl()\n  });\n  schemas: ISchema[] = [];\n  pluginEditing = {\n    index: null,\n    pluginId: null,\n    pluginConfig: null\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(\n      (params: Params) => {\n        const id = params['id'];\n        this.dataService.getEntity(id)\n          .subscribe((entity: IEntity) => {\n            this.entity = entity;\n            this.entityForm.patchValue(entity);\n          });\n      }\n    );\n    this.dataService.getSchemas()\n      .subscribe((schemas: ISchema[]) => {\n        this.schemas = schemas;\n      });\n  }\n\n  editPlugin(index: number, pluginConfig: any): void {\n    this.pluginEditing = {...this.pluginEditing,\n      index: index,\n      pluginId: pluginConfig.pluginId,\n      pluginConfig: pluginConfig\n    };\n  }\n\n  addPlugin(): void {\n    this.pluginEditing = {...this.pluginEditing,\n      index: null,\n      pluginId: null,\n      pluginConfig: null\n    };\n  }\n\n  pluginSelected(pluginId: string): void {\n    this.pluginEditing = {...this.pluginEditing,\n      index: null,\n      pluginId: pluginId,\n      pluginConfig: {}\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.ts","import { NgModule } from '@angular/core';\n// import { CommonModule } from '@angular/common';\nimport {SharedModule} from '../shared/shared.module';\n\nimport { EntityRoutingModule } from './entity-routing.module';\nimport { EntityComponent } from './entity.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { PluginEditorComponent } from './plugin-editor/plugin-editor.component';\nimport { PluginChooserComponent } from './plugin-chooser/plugin-chooser.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    EntityRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EntityComponent, PluginEditorComponent, PluginChooserComponent]\n})\nexport class EntityModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"li {\\n    cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.css\n// module id = ../../../../../src/app/entity/plugin-chooser/plugin-chooser.component.css\n// module chunks = entity.module","module.exports = \"<div>\\n  <label>choose plugin to add:</label>\\n  <ul>\\n    <li *ngFor=\\\"let plugin of plugins\\\"\\n      (click)=\\\"clicked(plugin.$id)\\\">\\n      <b>{{plugin.$id}}</b>\\n      {{plugin.description}} &raquo;\\n    </li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.html\n// module id = ../../../../../src/app/entity/plugin-chooser/plugin-chooser.component.html\n// module chunks = entity.module","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {IPlugin} from '../../shared/interfaces';\nimport {DataService} from '../../core/services/data.service';\n\n@Component({\n  selector: 'plugin-chooser',\n  templateUrl: './plugin-chooser.component.html',\n  styleUrls: ['./plugin-chooser.component.css']\n})\nexport class PluginChooserComponent implements OnInit {\n\n  @Output() onAdd = new EventEmitter<string>();\n  private plugins: IPlugin[] = [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.dataService.getPlugins()\n      .subscribe((plugins: IPlugin[]) => {\n        this.plugins = plugins;\n      });\n  }\n\n  clicked(pluginId: string) {\n    this.onAdd.emit(pluginId);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\n    font-size: 80%;\\n    font-weight: 800;\\n}\\ntextarea {\\n    width: 100%;\\n    height: 200px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.css\n// module id = ../../../../../src/app/entity/plugin-editor/plugin-editor.component.css\n// module chunks = entity.module","module.exports = \"<div *ngIf=\\\"pluginId\\\">\\n  <label *ngIf=\\\"pluginIndex !== null\\\">editing:</label>\\n  <label *ngIf=\\\"pluginIndex === null\\\">adding new:</label>\\n  {{pluginId}} plugin\\n  <div *ngIf=\\\"pluginSchema\\\">\\n    <textarea>{{pluginConfig | json}}</textarea>\\n    <pre>{{pluginSchema | json}}</pre>\\n  </div>\\n  <div *ngIf=\\\"!pluginSchema\\\">loading schema...</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.html\n// module id = ../../../../../src/app/entity/plugin-editor/plugin-editor.component.html\n// module chunks = entity.module","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport {DataService} from '../../core/services/data.service';\nimport {SimpleChanges} from '@angular/core/src/metadata/lifecycle_hooks';\nimport {IPlugin} from '../../shared/interfaces';\n\n@Component({\n  selector: 'plugin-editor',\n  templateUrl: './plugin-editor.component.html',\n  styleUrls: ['./plugin-editor.component.css']\n})\nexport class PluginEditorComponent implements OnInit, OnChanges {\n\n  @Input() pluginId: string;\n  @Input() pluginConfig: string;\n  @Input() pluginIndex: number;\n  pluginSchema: IPlugin = null;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // happens on startup or on clearing, there's nothing to load\n    if (!this.pluginId) {}\n    // schema hasn't changed, no need to repload\n    else if (!changes.pluginId && this.pluginId && this.pluginSchema) {}\n    // load schema\n    else {\n      this.pluginSchema = null;\n      this.dataService.getPlugin(this.pluginId)\n        .subscribe((plugin: IPlugin) => {\n          this.pluginSchema = plugin;\n        });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.ts"],"sourceRoot":"webpack:///"}