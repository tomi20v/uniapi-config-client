{"version":3,"sources":["/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity-routing.module.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.html","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.module.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.css","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.html","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.ts","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.css","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.html","/home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.ts"],"names":[],"mappings":"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","file":"entity.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {EntityComponent} from './entity.component';\n\nconst routes: Routes = [\n  { path: '', component: EntityComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EntityRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity-routing.module.ts","module.exports = \"<div class=\\\"orders view\\\">\\n  <div class=\\\"container\\\">\\n    <div *ngIf=\\\"entity\\\" class=\\\"app-content-left\\\">\\n      <header>\\n        <h3>\\n          <span *ngIf=\\\"hasChanges()\\\" class=\\\"app-unsaved\\\">has changes</span>\\n          <span class=\\\"glyphicon glyphicon-info-sign\\\"></span>\\n          &nbsp;&nbsp;Entity editor\\n        </h3>\\n      </header>\\n      <form [formGroup]=\\\"entityForm\\\" class=\\\"app-column\\\">\\n        <div class=\\\"app-input-row-huge\\\">\\n          <label>Name</label>\\n          <input formControlName=\\\"name\\\">\\n        </div>\\n        <div class=\\\"app-input-row\\\">\\n          <label>ID</label>\\n          <input formControlName=\\\"_id\\\">\\n        </div>\\n        <div class=\\\"app-input-row-half\\\">\\n          <label>created</label>\\n          <span class=\\\"app-input-info disabled\\\">{{entityForm.value.crstamp*1000 | date : 'yyyy-MM-dd HH:mm:ss'}}</span>\\n        </div>\\n        <div class=\\\"app-input-row-half\\\">\\n          <label>last updated</label>\\n          <span class=\\\"app-input-info disabled\\\">{{entityForm.value.tstamp*1000 | date : 'yyyy-MM-dd HH:mm:ss'}}</span>\\n        </div>\\n        <div class=\\\"app-input-row\\\">\\n          <span *ngIf=\\\"pluginEditing.index !== null && pluginEditing.pluginId !== null\\\"\\n                (click)=\\\"onAddPlugin()\\\" class=\\\"app-input-action\\\">\\n            new plugin\\n            <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n          </span>\\n          <span *ngIf=\\\"pluginEditing.index === null && pluginEditing.pluginId === null\\\"\\n                class=\\\"app-input-action\\\">\\n            select new plugin ID\\n            <span class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n          </span>\\n          <span *ngIf=\\\"pluginEditing.index === null && pluginEditing.pluginId !== null\\\"\\n                class=\\\"app-input-action\\\">\\n            edit new plugin\\n            <span class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n          </span>\\n          <label>plugins</label>\\n          <ul *ngIf=\\\"entityForm.value.plugins.length\\\" class=\\\"app-input-info\\\">\\n              <li *ngFor=\\\"let plugin of entityForm.value.plugins; let index = index\\\">\\n                  <span *ngIf=\\\"index !== pluginEditing.index\\\"\\n                        (click)=\\\"editPlugin(index, plugin)\\\"\\n                        class=\\\"app-input-action\\\">\\n                    edit\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n                  </span>\\n                  <span *ngIf=\\\"index === pluginEditing.index\\\" class=\\\"app-input-action\\\">\\n                    <span>currently editing</span>\\n                    <span class=\\\"glyphicon glyphicon-arrow-right\\\"></span>\\n                  </span>\\n                  <b>{{plugin.pluginId}}</b>\\n                  {{plugin.description}}\\n              </li>\\n          </ul>\\n          <span *ngIf=\\\"!entityForm.value.plugins.length\\\"\\n                class=\\\"app-input-info disabled\\\">no plugins</span>\\n        </div>\\n        <div class=\\\"app-input-row\\\">\\n          <label>schema</label>\\n          <select formControlName=\\\"schema\\\">\\n              <option *ngFor=\\\"let schema of schemas\\\" value=\\\"{{schema.$id}}\\\">{{schema.$id}}</option>\\n          </select>\\n        </div>\\n        <div>\\n          <input type=\\\"submit\\\"\\n                 (click)=\\\"onSubmit()\\\"\\n                 value=\\\"save entity\\\"\\n                 class=\\\"app-submit\\\"\\n                 [disabled]=\\\"!hasChanges()\\\"/>\\n        </div>\\n      </form>\\n      <div class=\\\"app-column\\\">\\n        <plugin-chooser *ngIf=\\\"!pluginEditing.pluginId\\\"\\n          (onAdd)=\\\"onPluginSelected($event)\\\"></plugin-chooser>\\n        <plugin-editor [pluginId]=\\\"pluginEditing.pluginId\\\"\\n          [pluginConfig]=\\\"pluginEditing.pluginConfig\\\"\\n          [pluginIndex]=\\\"pluginEditing.index\\\"\\n          (onSubmit)=\\\"onPluginUpdated(pluginEditing.index, $event)\\\"\\n          (onRemove)=\\\"onPluginRemoved($event)\\\"\\n        ></plugin-editor>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!entity\\\" class=\\\"app-content-left\\\">\\n      No entity found\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.html\n// module id = ../../../../../src/app/entity/entity.component.html\n// module chunks = entity.module","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../core/services/data.service';\nimport {IEntity, ISchema, IUniApiResponse} from '../shared/interfaces';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {FormControl, FormGroup, ValidationErrors} from '@angular/forms';\nimport {GrowlerMessageType, GrowlerService} from '../core/growler/growler.service';\n\n@Component({\n  selector: 'cm-entity',\n  templateUrl: './entity.component.html'\n})\nexport class EntityComponent implements OnInit {\n\n  entity: IEntity;\n  entityForm = new FormGroup({\n    _id: new FormControl(),\n    name: new FormControl(),\n    crstamp: new FormControl(),\n    tstamp: new FormControl(),\n    plugins: new FormControl(),\n    schema: new FormControl()\n  });\n  schemas: ISchema[] = [];\n  pluginEditing = {\n    index: null,\n    pluginId: null,\n    pluginConfig: null\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private growler: GrowlerService\n  ) { }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(\n      (params: Params) => {\n        const id = params['id'];\n        this.dataService.getEntity(id)\n          .subscribe((entity: IEntity) => {\n            this.entity = entity;\n            this.entityForm.patchValue(entity);\n            // this.editingMode = true;\n            this.entityForm.controls._id.disable();\n          });\n      }\n    );\n    this.dataService.getSchemas()\n      .subscribe((schemas: ISchema[]) => {\n        this.schemas = schemas;\n      });\n  }\n\n  editPlugin(index: number, pluginConfig: any): void {\n    this.pluginEditing = {...this.pluginEditing,\n      index: index,\n      pluginId: pluginConfig.pluginId,\n      pluginConfig: pluginConfig\n    };\n  }\n\n  onAddPlugin(): void {\n    this.initPluginEditing();\n  }\n\n  onPluginSelected(pluginId: string): void {\n    this.pluginEditing = {\n      index: null,\n      pluginId: pluginId,\n      pluginConfig: {}\n    };\n  }\n\n  onPluginUpdated(index, newPluginData): void {\n    const currentPlugins = this.entityForm.value.plugins;\n    if (index === null) {\n      currentPlugins.push(newPluginData);\n    }\n    else {\n      currentPlugins[index] = newPluginData;\n    }\n    this.entityForm.patchValue({plugins: currentPlugins});\n    this.entityForm.markAsDirty();\n    this.pluginEditing.index = null;\n    this.pluginEditing.pluginId = null;\n  }\n\n  onPluginRemoved(index): void {\n    if (index !== null) {\n      const currentPlugins = this.entityForm.value.plugins;\n      currentPlugins.splice(index,1);\n      this.entityForm.patchValue({plugins: currentPlugins});\n      this.entityForm.markAsDirty();\n    }\n    this.initPluginEditing();\n  }\n\n  onSubmit(): void {\n    if (this.entity._id === null) {\n      if(0)\n      this.dataService.insertEntity(this.entityForm.value, null, this.entityForm)\n        .subscribe(\n          (insertedEntity: IEntity) => {\n            if (insertedEntity) {\n              this.entity = insertedEntity;\n              // this.entityForm.patchValue(insertedEntity);\n              this.initPluginEditing();\n            }\n            else {\n              this.growler.growl('Error inserting', GrowlerMessageType.Danger);\n            }\n          },\n          (err: any) => console.log(err)\n        );\n    }\n\n    else {\n      this.dataService.updateEntity(\n        this.entity._id,\n        this.entityForm.value,\n        null,\n        this.entityForm\n      )\n        .subscribe(\n          (response: IUniApiResponse<IEntity>) => {\n            if (response.ok) {\n              this.entity = this.entityForm.value;\n              this.initPluginEditing();\n            }\n          },\n          (response: IUniApiResponse<IEntity>) => console.log('erro response:', response)\n        );\n    }\n  }\n\n  hasChanges(): boolean {\n    // @todo should rather compare loaded and current value\n    return this.entityForm.dirty;\n  }\n\n  private initPluginEditing(): void {\n    this.pluginEditing = {\n      index: null,\n      pluginId: null,\n      pluginConfig: null\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.component.ts","import { NgModule } from '@angular/core';\n// import { CommonModule } from '@angular/common';\nimport {SharedModule} from '../shared/shared.module';\nimport { JsonSchemaFormModule } from 'angular2-json-schema-form';\n\nimport { EntityRoutingModule } from './entity-routing.module';\nimport { EntityComponent } from './entity.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { PluginEditorComponent } from './plugin-editor/plugin-editor.component';\nimport { PluginChooserComponent } from './plugin-chooser/plugin-chooser.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    EntityRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JsonSchemaFormModule\n  ],\n  declarations: [EntityComponent, PluginEditorComponent, PluginChooserComponent]\n})\nexport class EntityModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/entity.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"li {\\n    cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.css\n// module id = ../../../../../src/app/entity/plugin-chooser/plugin-chooser.component.css\n// module chunks = entity.module","module.exports = \"<div class=\\\"app-topline\\\">\\n  <span>choose plugin to add</span>\\n  <ul>\\n    <li *ngFor=\\\"let plugin of plugins\\\"\\n      (click)=\\\"clicked(plugin.$id)\\\">\\n      <b>{{plugin.$id}}</b>\\n      {{plugin.description}} &raquo;\\n    </li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.html\n// module id = ../../../../../src/app/entity/plugin-chooser/plugin-chooser.component.html\n// module chunks = entity.module","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {IPlugin} from '../../shared/interfaces';\nimport {DataService} from '../../core/services/data.service';\n\n@Component({\n  selector: 'plugin-chooser',\n  templateUrl: './plugin-chooser.component.html',\n  styleUrls: ['./plugin-chooser.component.css']\n})\nexport class PluginChooserComponent implements OnInit {\n\n  @Output() onAdd = new EventEmitter<string>();\n  private plugins: IPlugin[] = [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.dataService.getPlugins()\n      .subscribe((plugins: IPlugin[]) => {\n        this.plugins = plugins;\n      });\n  }\n\n  clicked(pluginId: string) {\n    this.onAdd.emit(pluginId);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-chooser/plugin-chooser.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\n    font-size: 80%;\\n    font-weight: 800;\\n}\\ntextarea {\\n    width: 100%;\\n    height: 200px;\\n}\\nlabel.app-toplevel {\\n    font-size: 125%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.css\n// module id = ../../../../../src/app/entity/plugin-editor/plugin-editor.component.css\n// module chunks = entity.module","module.exports = \"<div *ngIf=\\\"pluginId\\\">\\n  <span *ngIf=\\\"pluginIndex !== null\\\" class=\\\"app-topline\\\">\\n    <div (click)=\\\"onRemoveFn()\\\" class=\\\"app-input-action\\\">\\n      remove plugin\\n      <i class=\\\"glyphicon glyphicon-remove\\\"></i>\\n    </div>\\n    <span>editing</span>\\n  </span>\\n  <span *ngIf=\\\"pluginIndex === null\\\" class=\\\"app-topline\\\">\\n    <div (click)=\\\"onRemoveFn()\\\" class=\\\"app-input-action\\\">\\n      cancel\\n      <i class=\\\"glyphicon glyphicon-remove\\\"></i>\\n    </div>\\n    <span>adding new</span>\\n  </span>\\n  <div *ngIf=\\\"pluginSchema\\\" [class.app-form-invalid]=\\\"!isValid\\\">\\n    <json-schema-form\\n      *ngIf=\\\"pluginSchema\\\"\\n      framework=\\\"no-framework\\\"\\n      loadExternalAssets=\\\"true\\\"\\n      [schema]=\\\"pluginSchema\\\"\\n      [(data)]=\\\"pluginConfig\\\"\\n      (isValid)=\\\"isValidFn($event)\\\"\\n      (onSubmit)=\\\"onSubmitFn()\\\"\\n      ></json-schema-form>\\n  </div>\\n  <div *ngIf=\\\"!pluginSchema\\\">loading schema...</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.html\n// module id = ../../../../../src/app/entity/plugin-editor/plugin-editor.component.html\n// module chunks = entity.module","import {Component, Input, OnInit, OnChanges, Output, EventEmitter} from '@angular/core';\nimport {DataService} from '../../core/services/data.service';\nimport {SimpleChanges} from '@angular/core/src/metadata/lifecycle_hooks';\nimport {IPlugin} from '../../shared/interfaces';\n\n@Component({\n  selector: 'plugin-editor',\n  templateUrl: './plugin-editor.component.html',\n  styleUrls: ['./plugin-editor.component.css']\n})\nexport class PluginEditorComponent implements OnInit, OnChanges {\n\n  @Input() pluginId: string;\n  @Input() pluginConfig: string;\n  @Input() pluginIndex: number;\n  @Output() onSubmit: EventEmitter<any> = new EventEmitter();\n  @Output() onRemove: EventEmitter<number> = new EventEmitter();\n  isValid: boolean = false;\n  pluginSchema: IPlugin = null;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // happens on startup or on clearing, there's nothing to load\n    if (!this.pluginId) {}\n    // schema hasn't changed, no need to repload\n    else if (!changes.pluginId && this.pluginId && this.pluginSchema) {}\n    // load schema\n    else {\n      this.pluginSchema = null;\n      this.dataService.getPlugin(this.pluginId)\n        .subscribe((plugin: IPlugin) => {\n          this.pluginSchema = plugin;\n        });\n    }\n  }\n\n  isValidFn(isValid): void {\n    this.isValid = isValid;\n  }\n\n  onSubmitFn():void {\n    if (this.isValid) {\n      this.onSubmit.emit(this.pluginConfig);\n    }\n  }\n\n  onRemoveFn(): void {\n    this.onRemove.emit(this.pluginIndex);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tamas/PhpstormProjects/uniapi-config-client/src/app/entity/plugin-editor/plugin-editor.component.ts"],"sourceRoot":"webpack:///"}